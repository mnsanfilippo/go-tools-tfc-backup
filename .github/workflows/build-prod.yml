name: Build and Upload to S3
'on':
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - '**.go'
jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      FUNCTION_NAME: '${{ secrets.FUNCTION_NAME }}'
      AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
      AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
      AWS_REGION: '${{ secrets.AWS_REGION }}'
      TF_TOKEN: '${{ secrets.TF_TOKEN }}'
      BUCKET: '${{ secrets.BUCKET }}'
      BUCKET_BUILDS: '${{ secrets.BUCKET_BUILDS }}'

    steps:
      - name: Setup actions/checkout
        uses: actions/checkout@v2
        with:
          path: main

      - name: Checkout Go Tools
        uses: actions/checkout@v2
        with:
          repository: mnsanfilippo/go-tools
          token: ${{ secrets.GH_TOKEN }}
          path: go-tools

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16.3
      - run: go version

      - name: Test Golang Code
        run: |
          echo "Generating bytecode ..."
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0
          go mod tidy
          go test -v ./...
        working-directory: main

      - name: Build Golang Code
        run: |
          echo "Generating bytecode ..."
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0
          go mod tidy
          go build -ldflags="-s -w" -a -installsuffix cgo -o main main.go
          zip main.zip main
        working-directory: main

      - name: Upload build to S3
        run: |
          go run main.go -b $BUCKET_BUILDS -k $FUNCTION_NAME.zip -f ../../main/main.zip
        working-directory: go-tools/s3-uploader